{"ast":null,"code":"import axios from 'axios';\nexport default {\n  props: ['url'],\n\n  date() {\n    return {\n      response: null,\n      loading: true\n    };\n  },\n\n  created() {\n    axios.get(this.url).then(response => {\n      console.log(response);\n      this.response = response.data;\n      this.loading = false;\n      this.$slots.default({\n        //return this.$scopedSlots.default({\n        response: this.response,\n        loading: this.loading\n      });\n    }).catch(error => {\n      alert('[ERROR] fetching the data', error);\n      console.log(error);\n    });\n  },\n\n  render() {\n    return this.$slots.default({\n      //return this.$scopedSlots.default({\n      response: this.response,\n      loading: this.loading\n    });\n  }\n\n};","map":{"version":3,"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe;AACXC,OAAK,EAAE,CAAC,KAAD,CADI;;AAEXC,MAAI,GAAG;AACH,WAAO;AACHC,cAAQ,EAAE,IADP;AAEHC,aAAO,EAAE;AAFN,KAAP;AAIH,GAPU;;AAQXC,SAAO,GAAG;AACNL,SAAK,CAACM,GAAN,CAAU,KAAKC,GAAf,EACCC,IADD,CACML,QAAO,IAAK;AACdM,aAAO,CAACC,GAAR,CAAYP,QAAZ;AACA,WAAKA,QAAL,GAAgBA,QAAQ,CAACQ,IAAzB;AACA,WAAKP,OAAL,GAAe,KAAf;AACA,WAAKQ,MAAL,CAAYC,OAAZ,CAAoB;AACzB;AACKV,gBAAQ,EAAE,KAAKA,QAFK;AAGpBC,eAAO,EAAE,KAAKA;AAHM,OAApB;AAKH,KAVD,EAWCU,KAXD,CAWOC,KAAI,IAAK;AACZC,WAAK,CAAC,2BAAD,EAA8BD,KAA9B,CAAL;AACAN,aAAO,CAACC,GAAR,CAAYK,KAAZ;AACH,KAdD;AAeH,GAxBU;;AAyBXE,QAAM,GAAG;AACL,WAAO,KAAKL,MAAL,CAAYC,OAAZ,CAAoB;AAC5B;AACKV,cAAQ,EAAE,KAAKA,QAFQ;AAGvBC,aAAO,EAAE,KAAKA;AAHS,KAApB,CAAP;AAKH;;AA/BU,CAAf","names":["axios","props","date","response","loading","created","get","url","then","console","log","data","$slots","default","catch","error","alert","render"],"sourceRoot":"","sources":["/Users/eggpotato/project/vue-design-patterns/renderless2/src/components/FetchData.vue"],"sourcesContent":["<script>\nimport axios from 'axios';\n\nexport default {\n    props: ['url'],\n    date() {\n        return {\n            response: null,\n            loading: true,\n        }\n    },\n    created() {\n        axios.get(this.url)\n        .then(response => {\n            console.log(response);\n            this.response = response.data;\n            this.loading = false;\n            this.$slots.default({\n       //return this.$scopedSlots.default({\n            response: this.response,\n            loading: this.loading,\n        });\n        })\n        .catch(error => {\n            alert('[ERROR] fetching the data', error);\n            console.log(error);\n        });\n    },\n    render() {\n        return this.$slots.default({\n       //return this.$scopedSlots.default({\n            response: this.response,\n            loading: this.loading,\n        });\n    },\n}\n</script>"]},"metadata":{},"sourceType":"module"}